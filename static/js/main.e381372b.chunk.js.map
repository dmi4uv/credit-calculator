{"version":3,"sources":["products/products.js","components/select/select.js","components/input/input.js","App.js","serviceWorker.js","index.js"],"names":["Products","Title","minAmount","maxAmount","minTerm","maxTerm","DefaultPercent","Term","onHandleSelect","content","type","label","SelectedProductID","items","forEach","item","index","push","key","onChange","inputHandleChange","value","name","action","disabled","className","min","onClick","App","state","CurrentTerm","CurrentProductPrice","FirstPayPERC","FirstPayRUB","DepositAmount","OtherProductsAmount","EquipmentAmount","TotalAmount","AnotherPercents","MonthlyAmount","Status","e","setState","target","selectedIndex","calculateTotalAmount","checkPercents","termHandleSelect","Number","percentToRub","result","toFixed","alert","runChecks","calculateAnnuity","checkConditions","CurrentProduct","i","p","Math","pow","this","Fragment","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.e381372b.chunk.js","sourcesContent":["const Products = [\r\n  {\r\n    Title: 'Новые автомобили',\r\n    minAmount: 200000,\r\n    maxAmount: 3000000,\r\n    minTerm: 14,\r\n    maxTerm: 52,\r\n    DefaultPercent: 10\r\n  },\r\n  {\r\n    Title: 'Б/у автомобили',\r\n    minAmount: 200000,\r\n    maxAmount: 4000000,\r\n    minTerm: 14,\r\n    maxTerm: 52,\r\n    DefaultPercent: 11\r\n  },\r\n  {\r\n    Title: 'Мото новые',\r\n    minAmount: 10000,\r\n    maxAmount: 1000000,\r\n    minTerm: 6,\r\n    maxTerm: 12,\r\n    DefaultPercent: 12\r\n  },\r\n  {\r\n    Title: 'Мото Б/у ',\r\n    minAmount: 100000,\r\n    maxAmount: 2000000,\r\n    minTerm: 3,\r\n    maxTerm: 40,\r\n    DefaultPercent: 13\r\n  },\r\n  {\r\n    Title: 'Рассрочка',\r\n    minAmount: 60000,\r\n    maxAmount: 1200000,\r\n    minTerm: 5,\r\n    maxTerm: 24,\r\n    Term: [\"--\",3,6,9,12,18,24],\r\n    DefaultPercent: 4\r\n  }\r\n]\r\n\r\nexport default Products;","import React from \"react\";\r\n\r\nexport default ({onHandleSelect, content, type, label, SelectedProductID}) => {\r\n\r\n  const items = []\r\n  if (type===\"Products\") {\r\n    content.forEach((item, index) => {\r\n      items.push(\r\n        <option key={index}>{item.Title}</option>\r\n      )\r\n    })\r\n  } else {\r\n    content.forEach((item, index) => {\r\n      items.push(\r\n        <option key={index}>{item}</option>\r\n      )\r\n    })\r\n  }\r\n\r\n  return(\r\n    <div>\r\n      <label>{label}</label>\r\n      <select onChange={onHandleSelect}>{items}</select>\r\n      <br/>\r\n      {\r\n        (type===\"Products\")?\r\n          <i>Кредит от {content[SelectedProductID].minAmount} до {content[SelectedProductID].maxAmount} рублей, на срок от {\r\n              (SelectedProductID===4)?\r\n                3 :\r\n                content[SelectedProductID].minTerm\r\n            } до {\r\n              (SelectedProductID===4)?12:\r\n            content[SelectedProductID].maxTerm } месяцев</i>:\r\n          null\r\n      }\r\n\r\n    </div>\r\n\r\n  )\r\n\r\n}","import React from \"react\";\r\n\r\nexport default ({label, inputHandleChange,value, name,action = false,disabled = false}) => {\r\n  return (\r\n    <div className=\"jcsb\">\r\n      <label>{label}</label>\r\n      <input onChange={inputHandleChange} type=\"number\" min={0} value={value} name={name} disabled={disabled}/>\r\n      {\r\n        action?\r\n        <button onClick={action}>%</button>:\r\n        null\r\n      }\r\n    </div>\r\n  )\r\n}","import React, {Component} from 'react';\r\nimport './App.css';\r\nimport Products from \"./products/products\";\r\nimport Select from './components/select/select'\r\nimport Input from './components/input/input'\r\n\r\nexport default class App extends Component{\r\n\r\n  state = {\r\n    Products: Products,\r\n    SelectedProductID : 0,\r\n    CurrentTerm: 0,\r\n    CurrentProductPrice: 0,\r\n    FirstPayPERC: 0,\r\n    FirstPayRUB: 0,\r\n    DepositAmount: 0,\r\n    OtherProductsAmount: 0,\r\n    EquipmentAmount: 0,\r\n    TotalAmount: 0,\r\n    AnotherPercents: 0,\r\n    MonthlyAmount: 0,\r\n    Status: false\r\n  }\r\n\r\n  onHandleSelect = (e) => {\r\n    this.setState({SelectedProductID: e.target.selectedIndex, Status: 0, CurrentTerm: 0})\r\n    this.calculateTotalAmount()\r\n    this.checkPercents()\r\n  }\r\n\r\n  termHandleSelect = (e) => {\r\n    this.setState({CurrentTerm: Number(e.target.value), Status: 0})\r\n  }\r\n\r\n  inputHandleChange = (e) => {\r\n    const {name,value} = e.target\r\n    this.setState({[name]: Number(value), Status: 0},()=>{\r\n      this.calculateTotalAmount()\r\n      this.checkPercents()\r\n    })\r\n\r\n  }\r\n\r\n  percentToRub = () => {\r\n    const {CurrentProductPrice, FirstPayPERC} = this.state\r\n    const result = ((CurrentProductPrice/100)*FirstPayPERC).toFixed(2)\r\n    this.setState({FirstPayRUB: Number(result)})\r\n    alert(`${result} ₽`)\r\n  }\r\n\r\n  calculateTotalAmount = () => {\r\n    const {\r\n      CurrentProductPrice,\r\n      FirstPayPERC,\r\n      DepositAmount,\r\n      OtherProductsAmount,\r\n      EquipmentAmount\r\n    } = this.state\r\n    const result = CurrentProductPrice - (CurrentProductPrice/100)*FirstPayPERC + DepositAmount + OtherProductsAmount + EquipmentAmount\r\n    this.setState({TotalAmount: Number(result.toFixed(2))})\r\n  }\r\n\r\n  runChecks = () => {\r\n    this.checkPercents()\r\n    this.calculateAnnuity()\r\n    this.checkConditions()\r\n  }\r\n\r\n  checkPercents = () => {\r\n    const {Products, SelectedProductID, CurrentTerm, FirstPayPERC} = this.state\r\n    const CurrentProduct = Products[SelectedProductID]\r\n    let AnotherPercents = 0\r\n\r\n    switch (CurrentProduct.Title) {\r\n      case 'Новые автомобили' :\r\n        if (37 <= CurrentTerm && CurrentTerm <= 72) {\r\n            AnotherPercents += 2\r\n          }\r\n        if (0 <= FirstPayPERC && FirstPayPERC <= 19 ) {\r\n          AnotherPercents += 4\r\n        }\r\n        if (20 <= FirstPayPERC && FirstPayPERC <= 50 ) {\r\n          AnotherPercents += 5\r\n        }\r\n        break\r\n      case 'Б/у автомобили' :\r\n        if (37 <= CurrentTerm && CurrentTerm <= 72) {\r\n          AnotherPercents += 4\r\n        }\r\n        if (0 <= FirstPayPERC && FirstPayPERC <= 19 ) {\r\n          AnotherPercents += 5\r\n        }\r\n        if (20 <= FirstPayPERC && FirstPayPERC <= 50 ) {\r\n          AnotherPercents += 7\r\n        }\r\n        break\r\n      default:\r\n        break\r\n    }\r\n    this.setState({AnotherPercents})\r\n  }\r\n\r\n  checkConditions = () => {\r\n    const {Products, SelectedProductID, CurrentTerm, TotalAmount} = this.state\r\n    const CurrentProduct = Products[SelectedProductID]\r\n\r\n\r\n    if (\r\n      CurrentTerm >= CurrentProduct.minTerm &&\r\n      CurrentTerm <= CurrentProduct.maxTerm &&\r\n      TotalAmount >= CurrentProduct.minAmount &&\r\n      TotalAmount <= CurrentProduct.maxAmount\r\n    ){\r\n      this.setState({Status: 2})\r\n    } else {\r\n      this.setState({Status: 1})\r\n    }\r\n  }\r\n\r\n  calculateAnnuity = () => {\r\n      const {TotalAmount, CurrentTerm, SelectedProductID, Products, AnotherPercents} = this.state\r\n      const i = ((Products[SelectedProductID].DefaultPercent + AnotherPercents) / 12) / 100\r\n      const k = (i * (Math.pow(1 + i, CurrentTerm))) / (Math.pow(1 + i, CurrentTerm) - 1);\r\n      const p = (TotalAmount * k).toFixed(2)\r\n      this.setState({MonthlyAmount: p})\r\n  }\r\n\r\n  render() {\r\n\r\n    const {\r\n      SelectedProductID,\r\n      Products,\r\n      CurrentTerm,\r\n      CurrentProductPrice,\r\n      FirstPayPERC,\r\n      DepositAmount,\r\n      OtherProductsAmount,\r\n      EquipmentAmount,\r\n      TotalAmount,\r\n      MonthlyAmount\r\n    } = this.state\r\n\r\n    return (\r\n      <div className=\"App\">\r\n        <div className=\"jcc\">\r\n          <Select onHandleSelect = {this.onHandleSelect} content = {Products} type=\"Products\" label={'Кредитная программа:'} SelectedProductID = {SelectedProductID}/>\r\n\r\n          {\r\n            (SelectedProductID===4) ?\r\n            <Select onHandleSelect={this.termHandleSelect} content = {Products[4].Term} type=\"Term\" label={'Срок рассрочки (мес)'} /> :\r\n            <Input inputHandleChange = {this.inputHandleChange} label={'Срок кредита (мес)'} value={CurrentTerm} name={\"CurrentTerm\"} />\r\n          }\r\n\r\n          <Input inputHandleChange = {this.inputHandleChange} label={'Стоимость товара'} name={\"CurrentProductPrice\"} value={CurrentProductPrice} />\r\n          <Input inputHandleChange = {this.inputHandleChange} label={'Первоначальный взнос (процентов)'} action ={this.percentToRub} name={\"FirstPayPERC\"} value={FirstPayPERC}/>\r\n          <Input inputHandleChange = {this.inputHandleChange} label={'Сумма страхования  залога'} name={\"DepositAmount\"} value={DepositAmount} />\r\n          <Input inputHandleChange = {this.inputHandleChange} label={'Сумма дополнительных продуктов'} name={\"OtherProductsAmount\"} value={OtherProductsAmount} />\r\n          <Input inputHandleChange = {this.inputHandleChange} label={'Сумма дополнительного оборудования'} name={\"EquipmentAmount\"} value={EquipmentAmount} />\r\n          <Input label={'Сумма кредита'} disabled={true} value={TotalAmount} />\r\n          <button onClick={this.runChecks}>Рассчитать</button>\r\n\r\n          {(this.state.Status === 2)?(\r\n              <React.Fragment>\r\n                <br/>\r\n                <label>Рассчёты являются предварительными</label>\r\n                <br/>\r\n                <label>Процентная ставка {Products[SelectedProductID].DefaultPercent + this.state.AnotherPercents}</label>\r\n                <br/>\r\n                <label>Ежемесячный платеж: {MonthlyAmount}</label>\r\n              </React.Fragment>)\r\n            :\r\n             (this.state.Status === 1)?(\r\n               <React.Fragment>\r\n                 <br/>\r\n                 <span>Условия не подходят</span>\r\n               </React.Fragment>\r\n             ): null\r\n          }\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n}","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}